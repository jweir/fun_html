# frozen_string_literal: true
# typed: strict

module Html
  # HTML nodes autogenerated, do not edit
  module NodeDefinitions
    extend T::Sig
    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def html(attributes, elements)
      Html::Node.new('html', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def head(attributes, elements)
      Html::Node.new('head', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def title(attributes, elements)
      Html::Node.new('title', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def base(attributes, elements)
      Html::Node.new('base', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def link(attributes, elements)
      Html::Node.new('link', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def meta(attributes, elements)
      Html::Node.new('meta', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def style(attributes, elements)
      Html::Node.new('style', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def body(attributes, elements)
      Html::Node.new('body', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def article(attributes, elements)
      Html::Node.new('article', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def section(attributes, elements)
      Html::Node.new('section', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def nav(attributes, elements)
      Html::Node.new('nav', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def aside(attributes, elements)
      Html::Node.new('aside', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def h1(attributes, elements)
      Html::Node.new('h1', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def h2(attributes, elements)
      Html::Node.new('h2', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def h3(attributes, elements)
      Html::Node.new('h3', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def h4(attributes, elements)
      Html::Node.new('h4', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def h5(attributes, elements)
      Html::Node.new('h5', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def h6(attributes, elements)
      Html::Node.new('h6', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def hgroup(attributes, elements)
      Html::Node.new('hgroup', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def header(attributes, elements)
      Html::Node.new('header', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def footer(attributes, elements)
      Html::Node.new('footer', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def address(attributes, elements)
      Html::Node.new('address', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def p(attributes, elements)
      Html::Node.new('p', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def hr(attributes, elements)
      Html::Node.new('hr', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def pre(attributes, elements)
      Html::Node.new('pre', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def blockquote(attributes, elements)
      Html::Node.new('blockquote', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def ol(attributes, elements)
      Html::Node.new('ol', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def ul(attributes, elements)
      Html::Node.new('ul', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def menu(attributes, elements)
      Html::Node.new('menu', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def li(attributes, elements)
      Html::Node.new('li', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def dl(attributes, elements)
      Html::Node.new('dl', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def dt(attributes, elements)
      Html::Node.new('dt', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def dd(attributes, elements)
      Html::Node.new('dd', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def figure(attributes, elements)
      Html::Node.new('figure', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def figcaption(attributes, elements)
      Html::Node.new('figcaption', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def main(attributes, elements)
      Html::Node.new('main', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def search(attributes, elements)
      Html::Node.new('search', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def div(attributes, elements)
      Html::Node.new('div', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def a(attributes, elements)
      Html::Node.new('a', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def em(attributes, elements)
      Html::Node.new('em', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def strong(attributes, elements)
      Html::Node.new('strong', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def small(attributes, elements)
      Html::Node.new('small', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def s(attributes, elements)
      Html::Node.new('s', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def cite(attributes, elements)
      Html::Node.new('cite', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def q(attributes, elements)
      Html::Node.new('q', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def dfn(attributes, elements)
      Html::Node.new('dfn', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def abbr(attributes, elements)
      Html::Node.new('abbr', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def ruby(attributes, elements)
      Html::Node.new('ruby', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def rt(attributes, elements)
      Html::Node.new('rt', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def rp(attributes, elements)
      Html::Node.new('rp', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def data(attributes, elements)
      Html::Node.new('data', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def time(attributes, elements)
      Html::Node.new('time', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def code(attributes, elements)
      Html::Node.new('code', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def var(attributes, elements)
      Html::Node.new('var', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def samp(attributes, elements)
      Html::Node.new('samp', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def kbd(attributes, elements)
      Html::Node.new('kbd', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def sub(attributes, elements)
      Html::Node.new('sub', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def sup(attributes, elements)
      Html::Node.new('sup', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def i(attributes, elements)
      Html::Node.new('i', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def b(attributes, elements)
      Html::Node.new('b', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def u(attributes, elements)
      Html::Node.new('u', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def mark(attributes, elements)
      Html::Node.new('mark', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def bdi(attributes, elements)
      Html::Node.new('bdi', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def bdo(attributes, elements)
      Html::Node.new('bdo', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def span(attributes, elements)
      Html::Node.new('span', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def br(attributes, elements)
      Html::Node.new('br', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def wbr(attributes, elements)
      Html::Node.new('wbr', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def ins(attributes, elements)
      Html::Node.new('ins', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def del(attributes, elements)
      Html::Node.new('del', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def picture(attributes, elements)
      Html::Node.new('picture', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def source(attributes, elements)
      Html::Node.new('source', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def img(attributes, elements)
      Html::Node.new('img', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def iframe(attributes, elements)
      Html::Node.new('iframe', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def embed(attributes, elements)
      Html::Node.new('embed', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def object(attributes, elements)
      Html::Node.new('object', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def video(attributes, elements)
      Html::Node.new('video', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def audio(attributes, elements)
      Html::Node.new('audio', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def track(attributes, elements)
      Html::Node.new('track', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def map(attributes, elements)
      Html::Node.new('map', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def area(attributes, elements)
      Html::Node.new('area', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def table(attributes, elements)
      Html::Node.new('table', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def caption(attributes, elements)
      Html::Node.new('caption', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def colgroup(attributes, elements)
      Html::Node.new('colgroup', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def col(attributes, elements)
      Html::Node.new('col', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def tbody(attributes, elements)
      Html::Node.new('tbody', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def thead(attributes, elements)
      Html::Node.new('thead', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def tfoot(attributes, elements)
      Html::Node.new('tfoot', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def tr(attributes, elements)
      Html::Node.new('tr', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def td(attributes, elements)
      Html::Node.new('td', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def th(attributes, elements)
      Html::Node.new('th', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def form(attributes, elements)
      Html::Node.new('form', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def label(attributes, elements)
      Html::Node.new('label', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def input(attributes, elements)
      Html::Node.new('input', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def button(attributes, elements)
      Html::Node.new('button', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def select(attributes, elements)
      Html::Node.new('select', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def datalist(attributes, elements)
      Html::Node.new('datalist', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def optgroup(attributes, elements)
      Html::Node.new('optgroup', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def option(attributes, elements)
      Html::Node.new('option', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def textarea(attributes, elements)
      Html::Node.new('textarea', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def output(attributes, elements)
      Html::Node.new('output', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def progress(attributes, elements)
      Html::Node.new('progress', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def meter(attributes, elements)
      Html::Node.new('meter', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def fieldset(attributes, elements)
      Html::Node.new('fieldset', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def legend(attributes, elements)
      Html::Node.new('legend', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def details(attributes, elements)
      Html::Node.new('details', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def summary(attributes, elements)
      Html::Node.new('summary', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def dialog(attributes, elements)
      Html::Node.new('dialog', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def script(attributes, elements)
      Html::Node.new('script', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def noscript(attributes, elements)
      Html::Node.new('noscript', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def template(attributes, elements)
      Html::Node.new('template', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def slot(attributes, elements)
      Html::Node.new('slot', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def canvas(attributes, elements)
      Html::Node.new('canvas', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def applet(attributes, elements)
      Html::Node.new('applet', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def acronym(attributes, elements)
      Html::Node.new('acronym', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def bgsound(attributes, elements)
      Html::Node.new('bgsound', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def dir(attributes, elements)
      Html::Node.new('dir', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def frame(attributes, elements)
      Html::Node.new('frame', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def frameset(attributes, elements)
      Html::Node.new('frameset', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def noframes(attributes, elements)
      Html::Node.new('noframes', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def isindex(attributes, elements)
      Html::Node.new('isindex', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def keygen(attributes, elements)
      Html::Node.new('keygen', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def listing(attributes, elements)
      Html::Node.new('listing', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def menuitem(attributes, elements)
      Html::Node.new('menuitem', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def nextid(attributes, elements)
      Html::Node.new('nextid', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def noembed(attributes, elements)
      Html::Node.new('noembed', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def param(attributes, elements)
      Html::Node.new('param', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def plaintext(attributes, elements)
      Html::Node.new('plaintext', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def rb(attributes, elements)
      Html::Node.new('rb', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def rtc(attributes, elements)
      Html::Node.new('rtc', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def strike(attributes, elements)
      Html::Node.new('strike', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def xmp(attributes, elements)
      Html::Node.new('xmp', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def basefont(attributes, elements)
      Html::Node.new('basefont', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def big(attributes, elements)
      Html::Node.new('big', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def blink(attributes, elements)
      Html::Node.new('blink', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def center(attributes, elements)
      Html::Node.new('center', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def font(attributes, elements)
      Html::Node.new('font', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def marquee(attributes, elements)
      Html::Node.new('marquee', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def multicol(attributes, elements)
      Html::Node.new('multicol', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def nobr(attributes, elements)
      Html::Node.new('nobr', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def spacer(attributes, elements)
      Html::Node.new('spacer', attributes, elements)
    end

    sig { params(attributes: T::Array[Html::Attribute], elements: T::Array[Html::Element]).returns(Html::Element) }
    def tt(attributes, elements)
      Html::Node.new('tt', attributes, elements)
    end
  end
end
