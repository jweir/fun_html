# frozen_string_literal: true
# typed: strict

module Html
  # HTML nodes autogenerated, do not edit
  module NodeDefinitions
    extend T::Sig

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def html(attributes, &elements)
      write('html', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def head(attributes, &elements)
      write('head', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def title(attributes, &elements)
      write('title', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def base(attributes, &elements)
      write('base', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def link(attributes, &elements)
      write('link', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def meta(attributes, &elements)
      write('meta', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def style(attributes, &elements)
      write('style', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def body(attributes, &elements)
      write('body', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def article(attributes, &elements)
      write('article', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def section(attributes, &elements)
      write('section', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def nav(attributes, &elements)
      write('nav', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def aside(attributes, &elements)
      write('aside', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def h1(attributes, &elements)
      write('h1', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def h2(attributes, &elements)
      write('h2', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def h3(attributes, &elements)
      write('h3', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def h4(attributes, &elements)
      write('h4', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def h5(attributes, &elements)
      write('h5', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def h6(attributes, &elements)
      write('h6', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def hgroup(attributes, &elements)
      write('hgroup', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def header(attributes, &elements)
      write('header', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def footer(attributes, &elements)
      write('footer', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def address(attributes, &elements)
      write('address', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def p(attributes, &elements)
      write('p', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def hr(attributes, &elements)
      write('hr', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def pre(attributes, &elements)
      write('pre', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def blockquote(attributes, &elements)
      write('blockquote', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def ol(attributes, &elements)
      write('ol', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def ul(attributes, &elements)
      write('ul', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def menu(attributes, &elements)
      write('menu', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def li(attributes, &elements)
      write('li', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def dl(attributes, &elements)
      write('dl', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def dt(attributes, &elements)
      write('dt', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def dd(attributes, &elements)
      write('dd', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def figure(attributes, &elements)
      write('figure', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def figcaption(attributes, &elements)
      write('figcaption', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def main(attributes, &elements)
      write('main', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def search(attributes, &elements)
      write('search', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def div(attributes, &elements)
      write('div', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def a(attributes, &elements)
      write('a', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def em(attributes, &elements)
      write('em', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def strong(attributes, &elements)
      write('strong', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def small(attributes, &elements)
      write('small', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def s(attributes, &elements)
      write('s', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def cite(attributes, &elements)
      write('cite', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def q(attributes, &elements)
      write('q', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def dfn(attributes, &elements)
      write('dfn', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def abbr(attributes, &elements)
      write('abbr', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def ruby(attributes, &elements)
      write('ruby', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def rt(attributes, &elements)
      write('rt', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def rp(attributes, &elements)
      write('rp', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def data(attributes, &elements)
      write('data', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def time(attributes, &elements)
      write('time', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def code(attributes, &elements)
      write('code', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def var(attributes, &elements)
      write('var', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def samp(attributes, &elements)
      write('samp', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def kbd(attributes, &elements)
      write('kbd', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def sub(attributes, &elements)
      write('sub', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def sup(attributes, &elements)
      write('sup', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def i(attributes, &elements)
      write('i', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def b(attributes, &elements)
      write('b', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def u(attributes, &elements)
      write('u', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def mark(attributes, &elements)
      write('mark', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def bdi(attributes, &elements)
      write('bdi', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def bdo(attributes, &elements)
      write('bdo', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def span(attributes, &elements)
      write('span', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def br(attributes, &elements)
      write('br', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def wbr(attributes, &elements)
      write('wbr', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def ins(attributes, &elements)
      write('ins', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def del(attributes, &elements)
      write('del', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def picture(attributes, &elements)
      write('picture', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def source(attributes, &elements)
      write('source', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def img(attributes, &elements)
      write('img', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def iframe(attributes, &elements)
      write('iframe', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def embed(attributes, &elements)
      write('embed', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def object(attributes, &elements)
      write('object', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def video(attributes, &elements)
      write('video', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def audio(attributes, &elements)
      write('audio', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def track(attributes, &elements)
      write('track', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def map(attributes, &elements)
      write('map', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def area(attributes, &elements)
      write('area', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def table(attributes, &elements)
      write('table', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def caption(attributes, &elements)
      write('caption', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def colgroup(attributes, &elements)
      write('colgroup', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def col(attributes, &elements)
      write('col', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def tbody(attributes, &elements)
      write('tbody', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def thead(attributes, &elements)
      write('thead', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def tfoot(attributes, &elements)
      write('tfoot', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def tr(attributes, &elements)
      write('tr', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def td(attributes, &elements)
      write('td', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def th(attributes, &elements)
      write('th', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def form(attributes, &elements)
      write('form', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def label(attributes, &elements)
      write('label', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def input(attributes, &elements)
      write('input', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def button(attributes, &elements)
      write('button', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def select(attributes, &elements)
      write('select', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def datalist(attributes, &elements)
      write('datalist', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def optgroup(attributes, &elements)
      write('optgroup', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def option(attributes, &elements)
      write('option', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def textarea(attributes, &elements)
      write('textarea', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def output(attributes, &elements)
      write('output', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def progress(attributes, &elements)
      write('progress', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def meter(attributes, &elements)
      write('meter', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def fieldset(attributes, &elements)
      write('fieldset', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def legend(attributes, &elements)
      write('legend', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def details(attributes, &elements)
      write('details', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def summary(attributes, &elements)
      write('summary', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def dialog(attributes, &elements)
      write('dialog', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def script(attributes, &elements)
      write('script', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def noscript(attributes, &elements)
      write('noscript', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def template(attributes, &elements)
      write('template', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def slot(attributes, &elements)
      write('slot', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def canvas(attributes, &elements)
      write('canvas', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def applet(attributes, &elements)
      write('applet', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def acronym(attributes, &elements)
      write('acronym', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def bgsound(attributes, &elements)
      write('bgsound', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def dir(attributes, &elements)
      write('dir', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def frame(attributes, &elements)
      write('frame', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def frameset(attributes, &elements)
      write('frameset', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def noframes(attributes, &elements)
      write('noframes', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def isindex(attributes, &elements)
      write('isindex', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def keygen(attributes, &elements)
      write('keygen', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def listing(attributes, &elements)
      write('listing', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def menuitem(attributes, &elements)
      write('menuitem', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def nextid(attributes, &elements)
      write('nextid', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def noembed(attributes, &elements)
      write('noembed', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def param(attributes, &elements)
      write('param', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def plaintext(attributes, &elements)
      write('plaintext', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def rb(attributes, &elements)
      write('rb', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def rtc(attributes, &elements)
      write('rtc', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def strike(attributes, &elements)
      write('strike', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def xmp(attributes, &elements)
      write('xmp', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def basefont(attributes, &elements)
      write('basefont', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def big(attributes, &elements)
      write('big', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def blink(attributes, &elements)
      write('blink', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def center(attributes, &elements)
      write('center', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def font(attributes, &elements)
      write('font', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def marquee(attributes, &elements)
      write('marquee', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def multicol(attributes, &elements)
      write('multicol', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def nobr(attributes, &elements)
      write('nobr', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def spacer(attributes, &elements)
      write('spacer', attributes, &elements)
    end

    # sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
    def tt(attributes, &elements)
      write('tt', attributes, &elements)
    end
  end
end
