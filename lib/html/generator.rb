# frozen_string_literal: true
# typed: false

require 'json'
require 'sorbet-runtime'

module Html
  # generates the HTML node definitions
  module Generator
    extend T::Sig

    sig { void }
    def self.call
      source = File.read 'node_modules/@webref/elements/html.json'
      nodes = JSON.parse(source)['elements'].map do |el|
        <<~SRC

          #sig {params(attributes: T::Array[Html::Attribute], elements: T.proc.void).returns(Html::Element)}
          def #{el['name']}(attributes, &elements)
            write('#{el['name']}', attributes, &elements)
          end
        SRC
      end

      source =
        <<~SRC
          # frozen_string_literal: true
          # typed: strict

          module Html
            # HTML nodes autogenerated, do not edit
            module NodeDefinitions
              extend T::Sig
              #{nodes.join("\n\n")}
            end
          end
        SRC

      File.write 'lib/html/node_definitions.rb', source
    end
  end
end
