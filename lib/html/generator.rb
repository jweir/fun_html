# frozen_string_literal: true
# typed: false

require 'json'
require 'sorbet-runtime'

module Html
  # generates the HTML node definitions
  module Generator
    def self.call
      source = File.read 'node_modules/@webref/elements/html.json'
      grouped = JSON.parse(source)['elements'].group_by { _1['interface'] }

      interfaces = grouped.transform_values do |elements|
        elements.map do |el|
          <<~SRC

            def #{el['name']}(attributes = nil, &elements)
              write('<#{el['name']}', '</#{el['name']}>', attributes, &elements)
            end
          SRC
        end
      end

      source =
        <<~SRC
          module Html
            # HTML nodes autogenerated, do not edit
            module NodeDefinitions
              #{interfaces.map do |interface, elements|
                <<~HTML
                  module #{interface}
                  #{elements.join("\n")}
                  end
                HTML
              end.join("\n\n")}

              module HTMLAllElements
              #{interfaces.keys.map do |interface|
                <<~HTML
                  include #{interface}
                HTML
              end.join
              }
              end
            end
          end
        SRC

      File.write 'lib/html/node_definitions.rb', source
    end
  end
end
