# frozen_string_literal: true

module FunHtml
  # HTML attributes autogenerated, do not edit
  module AttributeDefinitions
    sig { params(value: String).void }

    def accept(value); end
    sig { params(value: String).void }

    def accept_charset(value); end
    sig { params(value: String).void }

    def accesskey(value); end
    sig { params(value: String).void }

    def action(value); end
    sig { params(value: String).void }

    def align(value); end
    sig { params(value: String).void }

    def alt(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def async(value = nil); end
    sig { params(value: String).void }

    def autocomplete(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def autofocus(value = nil); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def autoplay(value = nil); end
    sig { params(value: String).void }

    def bgcolor(value); end
    sig { params(value: Numeric).void }
    def border(value); end
    sig { params(value: String).void }

    def charset(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def checked(value = nil); end
    sig { params(value: String).void }

    def klass(value); end
    sig { params(value: Numeric).void }
    def cols(value); end
    sig { params(value: Numeric).void }
    def colspan(value); end
    sig { params(value: String).void }

    def content(value); end
    sig { params(value: String).void }

    def contenteditable(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def controls(value = nil); end
    sig { params(value: String).void }

    def coords(value); end
    sig { params(value: String).void }

    def data(value); end
    sig { params(value: String).void }

    def datetime(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def default(value = nil); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def defer(value = nil); end
    sig { params(value: String).void }

    def dir(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def disabled(value = nil); end
    sig { params(value: T.any(String, T::Boolean)).void }
    def download(value); end
    sig { params(value: String).void }

    def draggable(value); end
    sig { params(value: String).void }

    def enctype(value); end
    sig { params(value: String).void }

    def for(value); end
    sig { params(value: String).void }

    def form(value); end
    sig { params(value: String).void }

    def formaction(value); end
    sig { params(value: String).void }

    def headers(value); end
    sig { params(value: T.any(Numeric, String)).void }
    def height(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def hidden(value = nil); end
    sig { params(value: Numeric).void }
    def high(value); end
    sig { params(value: String).void }

    def href(value); end
    sig { params(value: String).void }

    def hreflang(value); end
    sig { params(value: String).void }

    def id(value); end
    sig { params(value: String).void }

    def integrity(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def ismap(value = nil); end
    sig { params(value: String).void }

    def kind(value); end
    sig { params(value: String).void }

    def label(value); end
    sig { params(value: String).void }

    def lang(value); end
    sig { params(value: String).void }

    def list(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def loop(value = nil); end
    sig { params(value: Numeric).void }
    def low(value); end
    sig { params(value: T.any(Numeric, String)).void }
    def max(value); end
    sig { params(value: Numeric).void }
    def maxlength(value); end
    sig { params(value: String).void }

    def media(value); end
    sig { params(value: String).void }

    def method(value); end
    sig { params(value: T.any(Numeric, String)).void }
    def min(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def multiple(value = nil); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def muted(value = nil); end
    sig { params(value: String).void }

    def name(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def novalidate(value = nil); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def open(value = nil); end
    sig { params(value: Numeric).void }
    def optimum(value); end
    sig { params(value: String).void }

    def pattern(value); end
    sig { params(value: String).void }

    def placeholder(value); end
    sig { params(value: String).void }

    def poster(value); end
    sig { params(value: String).void }

    def preload(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def readonly(value = nil); end
    sig { params(value: String).void }

    def rel(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def required(value = nil); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def reversed(value = nil); end
    sig { params(value: Numeric).void }
    def rows(value); end
    sig { params(value: Numeric).void }
    def rowspan(value); end
    sig { params(value: String).void }

    def sandbox(value); end
    sig { params(value: String).void }

    def scope(value); end
    sig { params(value: T.nilable(T::Boolean)).void }
    def selected(value = nil); end
    sig { params(value: String).void }

    def shape(value); end
    sig { params(value: Numeric).void }
    def size(value); end
    sig { params(value: String).void }

    def sizes(value); end
    sig { params(value: String).void }

    def spellcheck(value); end
    sig { params(value: String).void }

    def src(value); end
    sig { params(value: String).void }

    def srcdoc(value); end
    sig { params(value: String).void }

    def srclang(value); end
    sig { params(value: String).void }

    def srcset(value); end
    sig { params(value: Numeric).void }
    def start(value); end
    sig { params(value: T.any(Numeric, String)).void }
    def step(value); end
    sig { params(value: String).void }

    def style(value); end
    sig { params(value: Numeric).void }
    def tabindex(value); end
    sig { params(value: String).void }

    def target(value); end
    sig { params(value: String).void }

    def title(value); end
    sig { params(value: String).void }

    def translate(value); end
    sig { params(value: String).void }

    def type(value); end
    sig { params(value: String).void }

    def usemap(value); end
    sig { params(value: String).void }

    def value(value); end
    sig { params(value: T.any(Numeric, String)).void }
    def width(value); end
    sig { params(value: String).void }

    def wrap(value); end
  end
end
